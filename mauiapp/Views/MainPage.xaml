<?xml version="1.0" encoding="utf-8" ?>
<ContentPage xmlns="http://schemas.microsoft.com/dotnet/2021/maui"
             xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml" 
             x:Class="mauiapp.MainPage"
             xmlns:viewmodel="clr-namespace:mauiapp.ViewModels" 
             xmlns:toplevel="clr-namespace:mauiapp"
             x:DataType="viewmodel:MainPageViewModel">

    <ContentPage.Resources>
        <toplevel:CountColorConverter x:Key="countColor" />
        <toplevel:PriceColorConverter x:Key="priceColor" />
    </ContentPage.Resources>

    <Shell.Title>
        <MultiBinding StringFormat="{}{0}  ({1})">
            <Binding Path="SelectedSet.Name" />
            <Binding Path="SelectedSet.Code" />
        </MultiBinding>
    </Shell.Title>

    <Grid RowDefinitions="Auto, Auto, Auto, *" ColumnDefinitions="Auto, *, Auto" Padding="10" RowSpacing="0" ColumnSpacing="10">

        <Picker x:Name="setPicker" 
                SelectedIndexChanged="OnPickerSelectedIndexChanged" 
                Grid.Row="0" Grid.Column="1" 
                ItemsSource="{Binding SetList}" 
                FontSize="24" 
                HorizontalOptions="CenterAndExpand" 
                VerticalOptions="Center"
                ItemDisplayBinding="{Binding Name}"
                SelectedItem="{Binding SelectedSet}"/>

        <!-- I have to use WebViews here because Images can't support .svg images at runtime -->
        <WebView Source="{Binding SelectedSet.IconUrl}" 
                 Grid.Row="0" 
                 Grid.Column="0" 
                 HeightRequest="{OnPlatform WinUI=100, Android=50}" 
                 WidthRequest="{OnPlatform WinUI=100, Android=50}"/>
        <WebView Source="{Binding SelectedSet.IconUrl}" 
                 Grid.Row="0" 
                 Grid.Column="2" 
                 HeightRequest="{OnPlatform WinUI=100, Android=50}" 
                 WidthRequest="{OnPlatform WinUI=100, Android=50}"/>

        <Entry x:Name="cardEntry" Placeholder="" Grid.Row="1" Grid.ColumnSpan="3" TextChanged="OnEntryTextChanged" Completed="OnEntryCompleted"/>

        <ActivityIndicator x:Name="activityIndicator" IsRunning="True" Grid.Row="3" Grid.Column="1"/>
        
        <CollectionView Grid.Row="3" 
                        Grid.ColumnSpan="3" 
                        ItemsSource="{Binding CardList}" 
                        SelectionMode="None">
            <CollectionView.ItemTemplate>
                <DataTemplate x:DataType="toplevel:CardData">
                    <Frame Padding="20">
                        <Frame.GestureRecognizers>
                            <TapGestureRecognizer Command="{Binding Source={RelativeSource AncestorType={x:Type viewmodel:MainPageViewModel}}, Path=TapCardCommand}"
                                                  CommandParameter="{Binding .}" />
                        </Frame.GestureRecognizers>
                        <Grid ColumnSpacing="10" ColumnDefinitions="Auto, *, Auto, Auto">
                            <Label Text="{Binding Card.CollectorNumber}" FontSize="16" Grid.Column="0"/>
                            <Label Text="{Binding Card.Name}" FontSize="16" Grid.Column="1"/>
                            <Label Text="{Binding Card.Price, StringFormat='${0}'}" FontSize="16" TextColor="{Binding .,Converter={StaticResource priceColor}}" Grid.Column="2"/>
                            <Label Text="{Binding TotalCount}" FontSize="16" TextColor="{Binding .,Converter={StaticResource countColor}}" Grid.Column="3"/>
                        </Grid>
                    </Frame>
                </DataTemplate>
            </CollectionView.ItemTemplate>
        </CollectionView>

        <HorizontalStackLayout Grid.Row="2" Grid.Column="1" HorizontalOptions="Center">
            <Label VerticalTextAlignment="Center">Count:</Label>
            <Picker x:Name="countPicker"
                    SelectedItem="{Binding CountFilter}"
                    SelectedIndexChanged="OnFilterSelectedIndexChanged">
                <Picker.ItemsSource>
                    <x:Array Type="{x:Type x:String}">
                        <x:String>All</x:String>
                        <x:String>=0</x:String>
                        <x:String>&gt;=1</x:String>
                        <x:String>&gt;=4</x:String>
                        <x:String>&lt;4</x:String>
                    </x:Array>
                </Picker.ItemsSource>
            </Picker>

            <Label VerticalTextAlignment="Center">Price:</Label>
            <Picker x:Name="pricePicker"
                    SelectedItem="{Binding PriceFilter}"
                    SelectedIndexChanged="OnFilterSelectedIndexChanged">
                <Picker.ItemsSource>
                    <x:Array Type="{x:Type x:String}">
                        <x:String>All</x:String>
                        <x:String>&gt;=1</x:String>
                        <x:String>&gt;=10</x:String>
                    </x:Array>
                </Picker.ItemsSource>
            </Picker>

            <Label VerticalTextAlignment="Center">Rarity:</Label>
            <Picker x:Name="rarityPicker"
                    SelectedItem="{Binding RarityFilter}"
                    SelectedIndexChanged="OnFilterSelectedIndexChanged">
                <Picker.ItemsSource>
                    <x:Array Type="{x:Type x:String}">
                        <x:String>All</x:String>
                        <x:String>Common</x:String>
                        <x:String>Uncommon</x:String>
                        <x:String>Rare</x:String>
                        <x:String>Mythic</x:String>
                    </x:Array>
                </Picker.ItemsSource>
            </Picker>
        </HorizontalStackLayout>

    </Grid>

</ContentPage>
