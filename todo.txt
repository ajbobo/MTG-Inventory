--- SOLID refactor ---
Guide: https://www.rhyous.com/2022/07/22/developer-training-wheels-for-writing-s-o-l-i-d-code/
   I'm not 100% sold on all of this, but some of it would be worthwhile
HttpClient needs Interface
Add unit tests -- I think this is the most useful thing I can do, some of the SOLID principles make this easier/possible
Is there another way to inject IHttpClient and ISQLManager? Ninject? .NET dependency injection?
Split UI logic from actual behavior?
Split Inventory_Connection so that the Firebase logic could be replaced with a different database?


--- Term ---
Add option to ChooseSetDialog to only show sets that are in User_Inv
    This will need to get the list of Documents in User_Inv
Add filters:
    Price ($1+, $5+, $20+)
    CTC attributes (Foil, Prerelease, etc)
    Type
    Name
Add a way to open the card image? (Probably in a separate app, but if I can imbed it, that would be cool)
Published build needs an icon
Published build needs Google Firebase creds
Add a way to save decks
    Should also import them from the DeckBox files


--- Web UI ---
Should I change EditCTC into a React object instead of a group of functions?
Add filters for Foil, Prerelease, etc.
Add filters for card type
Include column for card type
Card panel doesn't scroll when 2 sides are shown and they overflow the bottom of the window
Add a panel of set information
    Number of cards in the set
    Cards collected
    Percentage collected
    Adjust values based on current filters


--- New Web UI ---
Migrate from Bootstrap to TailwindCSS and HeadlessUI?
    https://tailwindcss.com/
    https://headlessui.dev/

--- V2.0 ---
Can I create an API (hosted in Firebase) that does all the real work?
    Firebase Functions requires a paid account, so I'd need to find another way. Heroku? Hosted web-app? Microsft Azure has a free tier that includes Azure Functions
    Then I could create a UI or commandline app that drives it
    https://betterprogramming.pub/building-an-api-with-firebase-109041721f77

